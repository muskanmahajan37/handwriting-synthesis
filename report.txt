TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 13 files
Detected 18 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: handwriting-synthesis/tf_base_model.py
--------------------------------------------------------------------------------
handwriting-synthesis/tf_base_model.py:237:28: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:239:32: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:260:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:262:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:299:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:307:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/tf_base_model.py:318:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: handwriting-synthesis/prepare_data.py
--------------------------------------------------------------------------------
handwriting-synthesis/prepare_data.py:130:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/prepare_data.py:131:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/prepare_data.py:132:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/prepare_data.py:133:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
handwriting-synthesis/prepare_data.py:134:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: handwriting-synthesis/demo.py
--------------------------------------------------------------------------------
handwriting-synthesis/demo.py:149:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: handwriting-synthesis/tf_utils.py
--------------------------------------------------------------------------------
handwriting-synthesis/tf_utils.py:18:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
handwriting-synthesis/tf_utils.py:25:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
handwriting-synthesis/tf_utils.py:58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
handwriting-synthesis/tf_utils.py:65:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: handwriting-synthesis/.ipynb_checkpoints/demo-checkpoint.py
--------------------------------------------------------------------------------
handwriting-synthesis/.ipynb_checkpoints/demo-checkpoint.py:149:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'handwriting-synthesis'
================================================================================
--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/tf_base_model.py'
 outputting to 'handwriting-synthesis-v2/tf_base_model.py'
--------------------------------------------------------------------------------

109:23: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
237:28: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
239:32: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
260:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
262:20: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
299:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
307:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
318:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
355:22: INFO: Added keywords to args of function 'tf.reduce_sum'
355:45: INFO: Added keywords to args of function 'tf.reduce_sum'
355:91: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
362:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
362:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
367:50: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
374:67: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
377:67: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
380:63: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
384:19: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
386:19: INFO: Renamed 'tf.train.GradientDescentOptimizer' to 'tf.compat.v1.train.GradientDescentOptimizer'
388:19: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
402:25: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
404:38: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
406:24: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/data_frame.py'
 outputting to 'handwriting-synthesis-v2/data_frame.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/prepare_data.py'
 outputting to 'handwriting-synthesis-v2/prepare_data.py'
--------------------------------------------------------------------------------

130:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
131:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
132:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
133:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
134:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/rnn_cell.py'
 outputting to 'handwriting-synthesis-v2/rnn_cell.py'
--------------------------------------------------------------------------------

16:24: INFO: Renamed 'tf.nn.rnn_cell.RNNCell' to 'tf.compat.v1.nn.rnn_cell.RNNCell'
34:24: INFO: Added keywords to args of function 'tf.shape'
35:26: INFO: Added keywords to args of function 'tf.shape'
76:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
76:67: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
80:20: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
95:23: INFO: Added keywords to args of function 'tf.reduce_sum'
100:16: INFO: Added keywords to args of function 'tf.reduce_sum'
104:20: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
109:20: INFO: Renamed 'tf.contrib.rnn.LSTMCell' to 'tf.compat.v1.nn.rnn_cell.LSTMCell'
129:77: INFO: Renamed 'tf.AUTO_REUSE' to 'tf.compat.v1.AUTO_REUSE'
153:27: INFO: Added keywords to args of function 'tf.argmax'
177:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
181:13: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/rnn_ops.py'
 outputting to 'handwriting-synthesis-v2/rnn_ops.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/lyrics.py'
 outputting to 'handwriting-synthesis-v2/lyrics.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/demo.py'
 outputting to 'handwriting-synthesis-v2/demo.py'
--------------------------------------------------------------------------------

149:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/tf_utils.py'
 outputting to 'handwriting-synthesis-v2/tf_utils.py'
--------------------------------------------------------------------------------

17:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
18:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
18:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
20:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

25:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
25:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
27:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
27:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
33:16: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
36:12: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

57:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
58:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
58:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
60:24: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

65:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
65:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
67:28: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
67:28: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
73:16: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
76:12: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/rnn.py'
 outputting to 'handwriting-synthesis-v2/rnn.py'
--------------------------------------------------------------------------------

117:25: INFO: Added keywords to args of function 'tf.reduce_sum'
120:42: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
122:16: INFO: Renamed 'tf.log' to 'tf.math.log'
122:41: INFO: Renamed 'tf.log' to 'tf.math.log'
124:45: INFO: Added keywords to args of function 'tf.shape'
125:27: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
127:14: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
128:20: INFO: Added keywords to args of function 'tf.reduce_sum'
130:24: INFO: Added keywords to args of function 'tf.reduce_sum'
131:23: INFO: Added keywords to args of function 'tf.reduce_sum'
131:55: INFO: Added keywords to args of function 'tf.reduce_sum'
150:23: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
166:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
167:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
168:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
169:17: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
170:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
172:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
173:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
174:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
175:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
176:27: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
177:20: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
188:45: INFO: Added keywords to args of function 'tf.shape'
189:36: INFO: Renamed 'tf.nn.dynamic_rnn' to 'tf.compat.v1.nn.dynamic_rnn'
201:32: INFO: Added keywords to args of function 'tf.cond'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/drawing.py'
 outputting to 'handwriting-synthesis-v2/drawing.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/.ipynb_checkpoints/lyrics-checkpoint.py'
 outputting to 'handwriting-synthesis-v2/.ipynb_checkpoints/lyrics-checkpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/.ipynb_checkpoints/rnn_ops-checkpoint.py'
 outputting to 'handwriting-synthesis-v2/.ipynb_checkpoints/rnn_ops-checkpoint.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'handwriting-synthesis/.ipynb_checkpoints/demo-checkpoint.py'
 outputting to 'handwriting-synthesis-v2/.ipynb_checkpoints/demo-checkpoint.py'
--------------------------------------------------------------------------------

149:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

